package com.woniu.model;

import java.util.ArrayList;
import java.util.List;

public class ParkExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    public ParkExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andParkidIsNull() {
            addCriterion("parkid is null");
            return (Criteria) this;
        }

        public Criteria andParkidIsNotNull() {
            addCriterion("parkid is not null");
            return (Criteria) this;
        }

        public Criteria andParkidEqualTo(String value) {
            addCriterion("parkid =", value, "parkid");
            return (Criteria) this;
        }

        public Criteria andParkidNotEqualTo(String value) {
            addCriterion("parkid <>", value, "parkid");
            return (Criteria) this;
        }

        public Criteria andParkidGreaterThan(String value) {
            addCriterion("parkid >", value, "parkid");
            return (Criteria) this;
        }

        public Criteria andParkidGreaterThanOrEqualTo(String value) {
            addCriterion("parkid >=", value, "parkid");
            return (Criteria) this;
        }

        public Criteria andParkidLessThan(String value) {
            addCriterion("parkid <", value, "parkid");
            return (Criteria) this;
        }

        public Criteria andParkidLessThanOrEqualTo(String value) {
            addCriterion("parkid <=", value, "parkid");
            return (Criteria) this;
        }

        public Criteria andParkidLike(String value) {
            addCriterion("parkid like", value, "parkid");
            return (Criteria) this;
        }

        public Criteria andParkidNotLike(String value) {
            addCriterion("parkid not like", value, "parkid");
            return (Criteria) this;
        }

        public Criteria andParkidIn(List<String> values) {
            addCriterion("parkid in", values, "parkid");
            return (Criteria) this;
        }

        public Criteria andParkidNotIn(List<String> values) {
            addCriterion("parkid not in", values, "parkid");
            return (Criteria) this;
        }

        public Criteria andParkidBetween(String value1, String value2) {
            addCriterion("parkid between", value1, value2, "parkid");
            return (Criteria) this;
        }

        public Criteria andParkidNotBetween(String value1, String value2) {
            addCriterion("parkid not between", value1, value2, "parkid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userid is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userid is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(String value) {
            addCriterion("userid =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(String value) {
            addCriterion("userid <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(String value) {
            addCriterion("userid >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(String value) {
            addCriterion("userid >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(String value) {
            addCriterion("userid <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(String value) {
            addCriterion("userid <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLike(String value) {
            addCriterion("userid like", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotLike(String value) {
            addCriterion("userid not like", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<String> values) {
            addCriterion("userid in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<String> values) {
            addCriterion("userid not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(String value1, String value2) {
            addCriterion("userid between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(String value1, String value2) {
            addCriterion("userid not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andPropertyidIsNull() {
            addCriterion("propertyid is null");
            return (Criteria) this;
        }

        public Criteria andPropertyidIsNotNull() {
            addCriterion("propertyid is not null");
            return (Criteria) this;
        }

        public Criteria andPropertyidEqualTo(String value) {
            addCriterion("propertyid =", value, "propertyid");
            return (Criteria) this;
        }

        public Criteria andPropertyidNotEqualTo(String value) {
            addCriterion("propertyid <>", value, "propertyid");
            return (Criteria) this;
        }

        public Criteria andPropertyidGreaterThan(String value) {
            addCriterion("propertyid >", value, "propertyid");
            return (Criteria) this;
        }

        public Criteria andPropertyidGreaterThanOrEqualTo(String value) {
            addCriterion("propertyid >=", value, "propertyid");
            return (Criteria) this;
        }

        public Criteria andPropertyidLessThan(String value) {
            addCriterion("propertyid <", value, "propertyid");
            return (Criteria) this;
        }

        public Criteria andPropertyidLessThanOrEqualTo(String value) {
            addCriterion("propertyid <=", value, "propertyid");
            return (Criteria) this;
        }

        public Criteria andPropertyidLike(String value) {
            addCriterion("propertyid like", value, "propertyid");
            return (Criteria) this;
        }

        public Criteria andPropertyidNotLike(String value) {
            addCriterion("propertyid not like", value, "propertyid");
            return (Criteria) this;
        }

        public Criteria andPropertyidIn(List<String> values) {
            addCriterion("propertyid in", values, "propertyid");
            return (Criteria) this;
        }

        public Criteria andPropertyidNotIn(List<String> values) {
            addCriterion("propertyid not in", values, "propertyid");
            return (Criteria) this;
        }

        public Criteria andPropertyidBetween(String value1, String value2) {
            addCriterion("propertyid between", value1, value2, "propertyid");
            return (Criteria) this;
        }

        public Criteria andPropertyidNotBetween(String value1, String value2) {
            addCriterion("propertyid not between", value1, value2, "propertyid");
            return (Criteria) this;
        }

        public Criteria andParkfloorIsNull() {
            addCriterion("parkfloor is null");
            return (Criteria) this;
        }

        public Criteria andParkfloorIsNotNull() {
            addCriterion("parkfloor is not null");
            return (Criteria) this;
        }

        public Criteria andParkfloorEqualTo(String value) {
            addCriterion("parkfloor =", value, "parkfloor");
            return (Criteria) this;
        }

        public Criteria andParkfloorNotEqualTo(String value) {
            addCriterion("parkfloor <>", value, "parkfloor");
            return (Criteria) this;
        }

        public Criteria andParkfloorGreaterThan(String value) {
            addCriterion("parkfloor >", value, "parkfloor");
            return (Criteria) this;
        }

        public Criteria andParkfloorGreaterThanOrEqualTo(String value) {
            addCriterion("parkfloor >=", value, "parkfloor");
            return (Criteria) this;
        }

        public Criteria andParkfloorLessThan(String value) {
            addCriterion("parkfloor <", value, "parkfloor");
            return (Criteria) this;
        }

        public Criteria andParkfloorLessThanOrEqualTo(String value) {
            addCriterion("parkfloor <=", value, "parkfloor");
            return (Criteria) this;
        }

        public Criteria andParkfloorLike(String value) {
            addCriterion("parkfloor like", value, "parkfloor");
            return (Criteria) this;
        }

        public Criteria andParkfloorNotLike(String value) {
            addCriterion("parkfloor not like", value, "parkfloor");
            return (Criteria) this;
        }

        public Criteria andParkfloorIn(List<String> values) {
            addCriterion("parkfloor in", values, "parkfloor");
            return (Criteria) this;
        }

        public Criteria andParkfloorNotIn(List<String> values) {
            addCriterion("parkfloor not in", values, "parkfloor");
            return (Criteria) this;
        }

        public Criteria andParkfloorBetween(String value1, String value2) {
            addCriterion("parkfloor between", value1, value2, "parkfloor");
            return (Criteria) this;
        }

        public Criteria andParkfloorNotBetween(String value1, String value2) {
            addCriterion("parkfloor not between", value1, value2, "parkfloor");
            return (Criteria) this;
        }

        public Criteria andParknumIsNull() {
            addCriterion("parknum is null");
            return (Criteria) this;
        }

        public Criteria andParknumIsNotNull() {
            addCriterion("parknum is not null");
            return (Criteria) this;
        }

        public Criteria andParknumEqualTo(String value) {
            addCriterion("parknum =", value, "parknum");
            return (Criteria) this;
        }

        public Criteria andParknumNotEqualTo(String value) {
            addCriterion("parknum <>", value, "parknum");
            return (Criteria) this;
        }

        public Criteria andParknumGreaterThan(String value) {
            addCriterion("parknum >", value, "parknum");
            return (Criteria) this;
        }

        public Criteria andParknumGreaterThanOrEqualTo(String value) {
            addCriterion("parknum >=", value, "parknum");
            return (Criteria) this;
        }

        public Criteria andParknumLessThan(String value) {
            addCriterion("parknum <", value, "parknum");
            return (Criteria) this;
        }

        public Criteria andParknumLessThanOrEqualTo(String value) {
            addCriterion("parknum <=", value, "parknum");
            return (Criteria) this;
        }

        public Criteria andParknumLike(String value) {
            addCriterion("parknum like", value, "parknum");
            return (Criteria) this;
        }

        public Criteria andParknumNotLike(String value) {
            addCriterion("parknum not like", value, "parknum");
            return (Criteria) this;
        }

        public Criteria andParknumIn(List<String> values) {
            addCriterion("parknum in", values, "parknum");
            return (Criteria) this;
        }

        public Criteria andParknumNotIn(List<String> values) {
            addCriterion("parknum not in", values, "parknum");
            return (Criteria) this;
        }

        public Criteria andParknumBetween(String value1, String value2) {
            addCriterion("parknum between", value1, value2, "parknum");
            return (Criteria) this;
        }

        public Criteria andParknumNotBetween(String value1, String value2) {
            addCriterion("parknum not between", value1, value2, "parknum");
            return (Criteria) this;
        }

        public Criteria andIsstatusIsNull() {
            addCriterion("isstatus is null");
            return (Criteria) this;
        }

        public Criteria andIsstatusIsNotNull() {
            addCriterion("isstatus is not null");
            return (Criteria) this;
        }

        public Criteria andIsstatusEqualTo(Boolean value) {
            addCriterion("isstatus =", value, "isstatus");
            return (Criteria) this;
        }

        public Criteria andIsstatusNotEqualTo(Boolean value) {
            addCriterion("isstatus <>", value, "isstatus");
            return (Criteria) this;
        }

        public Criteria andIsstatusGreaterThan(Boolean value) {
            addCriterion("isstatus >", value, "isstatus");
            return (Criteria) this;
        }

        public Criteria andIsstatusGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isstatus >=", value, "isstatus");
            return (Criteria) this;
        }

        public Criteria andIsstatusLessThan(Boolean value) {
            addCriterion("isstatus <", value, "isstatus");
            return (Criteria) this;
        }

        public Criteria andIsstatusLessThanOrEqualTo(Boolean value) {
            addCriterion("isstatus <=", value, "isstatus");
            return (Criteria) this;
        }

        public Criteria andIsstatusIn(List<Boolean> values) {
            addCriterion("isstatus in", values, "isstatus");
            return (Criteria) this;
        }

        public Criteria andIsstatusNotIn(List<Boolean> values) {
            addCriterion("isstatus not in", values, "isstatus");
            return (Criteria) this;
        }

        public Criteria andIsstatusBetween(Boolean value1, Boolean value2) {
            addCriterion("isstatus between", value1, value2, "isstatus");
            return (Criteria) this;
        }

        public Criteria andIsstatusNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isstatus not between", value1, value2, "isstatus");
            return (Criteria) this;
        }

        public Criteria andIsavailableIsNull() {
            addCriterion("isavailable is null");
            return (Criteria) this;
        }

        public Criteria andIsavailableIsNotNull() {
            addCriterion("isavailable is not null");
            return (Criteria) this;
        }

        public Criteria andIsavailableEqualTo(Boolean value) {
            addCriterion("isavailable =", value, "isavailable");
            return (Criteria) this;
        }

        public Criteria andIsavailableNotEqualTo(Boolean value) {
            addCriterion("isavailable <>", value, "isavailable");
            return (Criteria) this;
        }

        public Criteria andIsavailableGreaterThan(Boolean value) {
            addCriterion("isavailable >", value, "isavailable");
            return (Criteria) this;
        }

        public Criteria andIsavailableGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isavailable >=", value, "isavailable");
            return (Criteria) this;
        }

        public Criteria andIsavailableLessThan(Boolean value) {
            addCriterion("isavailable <", value, "isavailable");
            return (Criteria) this;
        }

        public Criteria andIsavailableLessThanOrEqualTo(Boolean value) {
            addCriterion("isavailable <=", value, "isavailable");
            return (Criteria) this;
        }

        public Criteria andIsavailableIn(List<Boolean> values) {
            addCriterion("isavailable in", values, "isavailable");
            return (Criteria) this;
        }

        public Criteria andIsavailableNotIn(List<Boolean> values) {
            addCriterion("isavailable not in", values, "isavailable");
            return (Criteria) this;
        }

        public Criteria andIsavailableBetween(Boolean value1, Boolean value2) {
            addCriterion("isavailable between", value1, value2, "isavailable");
            return (Criteria) this;
        }

        public Criteria andIsavailableNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isavailable not between", value1, value2, "isavailable");
            return (Criteria) this;
        }

        public Criteria andParkinfoIsNull() {
            addCriterion("parkinfo is null");
            return (Criteria) this;
        }

        public Criteria andParkinfoIsNotNull() {
            addCriterion("parkinfo is not null");
            return (Criteria) this;
        }

        public Criteria andParkinfoEqualTo(String value) {
            addCriterion("parkinfo =", value, "parkinfo");
            return (Criteria) this;
        }

        public Criteria andParkinfoNotEqualTo(String value) {
            addCriterion("parkinfo <>", value, "parkinfo");
            return (Criteria) this;
        }

        public Criteria andParkinfoGreaterThan(String value) {
            addCriterion("parkinfo >", value, "parkinfo");
            return (Criteria) this;
        }

        public Criteria andParkinfoGreaterThanOrEqualTo(String value) {
            addCriterion("parkinfo >=", value, "parkinfo");
            return (Criteria) this;
        }

        public Criteria andParkinfoLessThan(String value) {
            addCriterion("parkinfo <", value, "parkinfo");
            return (Criteria) this;
        }

        public Criteria andParkinfoLessThanOrEqualTo(String value) {
            addCriterion("parkinfo <=", value, "parkinfo");
            return (Criteria) this;
        }

        public Criteria andParkinfoLike(String value) {
            addCriterion("parkinfo like", value, "parkinfo");
            return (Criteria) this;
        }

        public Criteria andParkinfoNotLike(String value) {
            addCriterion("parkinfo not like", value, "parkinfo");
            return (Criteria) this;
        }

        public Criteria andParkinfoIn(List<String> values) {
            addCriterion("parkinfo in", values, "parkinfo");
            return (Criteria) this;
        }

        public Criteria andParkinfoNotIn(List<String> values) {
            addCriterion("parkinfo not in", values, "parkinfo");
            return (Criteria) this;
        }

        public Criteria andParkinfoBetween(String value1, String value2) {
            addCriterion("parkinfo between", value1, value2, "parkinfo");
            return (Criteria) this;
        }

        public Criteria andParkinfoNotBetween(String value1, String value2) {
            addCriterion("parkinfo not between", value1, value2, "parkinfo");
            return (Criteria) this;
        }

        public Criteria andIsdeleteIsNull() {
            addCriterion("isdelete is null");
            return (Criteria) this;
        }

        public Criteria andIsdeleteIsNotNull() {
            addCriterion("isdelete is not null");
            return (Criteria) this;
        }

        public Criteria andIsdeleteEqualTo(Boolean value) {
            addCriterion("isdelete =", value, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteNotEqualTo(Boolean value) {
            addCriterion("isdelete <>", value, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteGreaterThan(Boolean value) {
            addCriterion("isdelete >", value, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isdelete >=", value, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteLessThan(Boolean value) {
            addCriterion("isdelete <", value, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteLessThanOrEqualTo(Boolean value) {
            addCriterion("isdelete <=", value, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteIn(List<Boolean> values) {
            addCriterion("isdelete in", values, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteNotIn(List<Boolean> values) {
            addCriterion("isdelete not in", values, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteBetween(Boolean value1, Boolean value2) {
            addCriterion("isdelete between", value1, value2, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isdelete not between", value1, value2, "isdelete");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table park
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 18 16:02:22 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table park
     *
     * @mbggenerated Thu Jul 18 16:02:22 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}